AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template for Hiver
Parameters:
  
  VpcId:
    Default: '********'
    Type: 'AWS::EC2::VPC::Id'
    Description: Default VpcId of your existing Virtual Private Cloud (VPC)
  
  Subnets:
    Default: 'subnet-0bed716d,subnet-186ff439'
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your VPC

  InstanceType:
    Description: Prod WebServer EC2 instance type
    Type: String
    Default: r5.large
    AllowedValues: [ "t2.micro", "t2.small", "t2.medium", "t2.large", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "r5.large", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.4xlarge"]
    ConstraintDescription: Must be a valid EC2 instance type. If your Ec2 instance is not in allowed values list, you can add your ec2 instances types in the allowed values.
    
  KeyName:
    Default: 'Mahi-AWS'
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'

Resources:

  ProdWebServersSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allowing SSH and TCP/TLS access
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 172.16.0.0/12

        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: prod-web-servers-sg    

  NetworkLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Type: 'network'
      Scheme: 'internet-facing'
      IpAddressType: 'ipv4'
      Subnets: !Ref Subnets
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}"

  NLBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref NLBTargetGroup
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 80
      Protocol: TCP

  NLBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: !Ref 'AWS::StackName'
      VpcId: !Ref VpcId
      Port: 80
      Protocol: TCP
      Targets:
        - Id: !Ref ProdWebServer1
          Port: 80
        - Id: !Ref ProdWebServer2
          Port: 80
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}"

  ProdWebServer1:
        Type: 'AWS::EC2::Instance'
        Properties:
          ImageId: 'ami-0c2b8ca1dad447f8a'
          InstanceType: !Ref InstanceType
          SecurityGroupIds: [!Ref ProdWebServersSg]
          KeyName: !Ref KeyName
          BlockDeviceMappings:
            - DeviceName: /dev/xvda
              Ebs:
                VolumeSize: 10
                VolumeType: gp2
            - DeviceName: /dev/xvdf
              NoDevice: {}
          SubnetId: "subnet-0bed716d"
          UserData:
            Fn::Base64: |
               #!/bin/bash
               # Use this for your user data 
               # install httpd 
               yum update -y
               yum install -y httpd
               systemctl start httpd
               systemctl enable httpd
               echo "<h1> $(hostname -f) </h1>" > /var/www/html/index.html          
          Tags:
             - Key: Name
               Value: Prod-web-server-1

  ProdWebServer2:
        Type: 'AWS::EC2::Instance'
        Properties:
          ImageId: 'ami-0c2b8ca1dad447f8a'
          InstanceType: !Ref InstanceType
          SecurityGroupIds: [!Ref ProdWebServersSg]
          KeyName: !Ref KeyName
          BlockDeviceMappings:
            - DeviceName: /dev/xvda
              Ebs:
                VolumeSize: 10
                VolumeType: gp2
            - DeviceName: /dev/xvdf
              NoDevice: {}
          SubnetId: "subnet-186ff439"
          UserData:
            Fn::Base64: |
               #!/bin/bash
               # Use this for your user data 
               # install httpd 
               yum update -y
               yum install -y httpd
               systemctl start httpd
               systemctl enable httpd
               echo "<h1> $(hostname -f) </h1>" > /var/www/html/index.html
          Tags:
             - Key: Name
               Value: Prod-web-server-2

Outputs:
  LoadBalancerDNSUrl:
    Description: The Network LoadBalancer DNSName URL
    Value: !GetAtt NetworkLoadBalancer.DNSName

